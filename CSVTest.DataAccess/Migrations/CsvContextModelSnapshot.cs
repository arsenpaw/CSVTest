// <auto-generated />
using System;
using CSVTest.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSVTest.DataAccess.Migrations
{
    [DbContext(typeof(CsvContext))]
    partial class CsvContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSVTest.DataAccess.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DoLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DropoffDatetime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FareAmount")
                        .HasPrecision(2, 2)
                        .HasColumnType("decimal(2,2)");

                    b.Property<int>("PassengerCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PuLocationId")
                        .HasColumnType("int");

                    b.Property<string>("StoreAndFwdFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TipAmount")
                        .HasPrecision(2, 2)
                        .HasColumnType("decimal(2,2)");

                    b.Property<double>("TripDistance")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
